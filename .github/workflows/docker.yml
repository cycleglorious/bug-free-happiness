name: Docker Image CI

on:
  push:
    branches: [ "main" ]
    
env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}

jobs:


    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            # This is used to complete the identity challenge
            # with sigstore/fulcio when running outside of PRs.
            id-token: write

        steps:
        - 
            name: Checkout repository
            uses: actions/checkout@v3

        # Install the cosign tool except on PR
        # https://github.com/sigstore/cosign-installer
        - 
            name: Install cosign
            if: github.event_name != 'pull_request'
            uses: sigstore/cosign-installer@v3.5.0
            with:
                cosign-release: 'v2.2.4'
        - 
            name: Setup Docker buildx
            uses: docker/setup-buildx-action@v2
        
        -
            name: Log into registry ${{ env.REGISTRY }}
            if: github.event_name != 'pull_request'
            uses: docker/login-action@v3
            with:
              registry: ${{ env.REGISTRY }}
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_TOKEN }}
        
        -
            name: Extract Docker metadata
            id: meta
            uses: docker/metadata-action@v5
            with:
                images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        
        - 
            name: Build and push Docker image
            id: build-and-push
            uses: docker/build-push-action@v4
            with:
                push: ${{ github.event_name != 'pull_request' }} # Don't push on PR
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
                cache-from: type=gha
                cache-to: type=gha,mode=max

        -
            name: Sign the image with cosign
            if: github.event_name != 'pull_request'
            run: cosign sign --key cosign.key ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.tags }}